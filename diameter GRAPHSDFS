#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll M=1e9+7;
//optimized binary search

 vector<ll> adj[100001];
 int vis[100001]={0};
 ll maxD,maxnode;
 void dfs(ll v,ll d)
 {
 	vis[v]=1;
 	if(d>maxD)
 	{
 	    maxD=d;
		 maxnode=v;	
	}
 	for(int i=0;i<adj[v].size();i++)
 	{
 		if(vis[adj[v][i]]==0)
 		  dfs(adj[v][i],d+1);
	 }
 }
 
int main() 
{
 
 	ll n;
 	cin>>n;
 	ll a,b;
 	for(ll i=0;i<n-1;i++)
 	{
 		cin>>a>>b;
 		adj[a].push_back(b);
 		adj[b].push_back(a);
	}
	maxD=-1;
	dfs(1,0);
  //cleaning the visited array
	for(ll i=0;i<=n;i++)vis[i]=0;
	maxD=-1;
	dfs(maxnode,0);
	cout<<maxD<<endl;
 
        
		
return 0;
}
